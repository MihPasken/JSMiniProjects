{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst API_KEY = \"4245b374-41f1-4962-ae9f-4e6f3d9044cc\";\nconst MOVIE_API_SRC = \"https://kinopoiskapiunofficial.tech/api/v2.2/films?order=RATING&type=ALL&ratingFrom=0&ratingTo=10&yearFrom=1000&yearTo=3000&page=2\";\nasync function getMovies(url) {\n  try {\n    const resp = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-API-KEY\": API_KEY\n      }\n    });\n    const resp_data = await resp.json();\n    return resp_data;\n  } catch (error) {\n    console.error(\"Error fetching and parsing data:\", error);\n  }\n  ;\n}\n;\nlet APImovies = await getMovies(MOVIE_API_SRC).then(result => result);\nconst APImoviesList = APImovies.items;\nconst initialState = {\n  movies: APImoviesList.map(movie => ({\n    movieImg: movie.posterUrl,\n    movieInfo: {\n      movieTitle: movie.nameRu,\n      movieCategory: movie.genres[0].genre,\n      movieRating: movie.ratingImdb\n    }\n  })).filter(item => item.movieInfo.movieCategory !== \"музыка\" && item.movieInfo.movieCategory !== \"фэнтези\")\n};\nconst CinemaSlicer = createSlice({\n  name: \"CinemaSlicer\",\n  initialState,\n  reducers: {\n    nulling(state, action) {\n      state.movies = state.movies; // Spare function\n    }\n  }\n});\nexport default CinemaSlicer.reducer;","map":{"version":3,"names":["createSlice","API_KEY","MOVIE_API_SRC","getMovies","url","resp","fetch","headers","resp_data","json","error","console","APImovies","then","result","APImoviesList","items","initialState","movies","map","movie","movieImg","posterUrl","movieInfo","movieTitle","nameRu","movieCategory","genres","genre","movieRating","ratingImdb","filter","item","CinemaSlicer","name","reducers","nulling","state","action","reducer"],"sources":["C:/Users/Vikto/Desktop/MyWorks/JS/JSMiniProjects/cinemax/src/Redux/CinemaSlicer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst API_KEY = \"4245b374-41f1-4962-ae9f-4e6f3d9044cc\"\r\n\r\nconst MOVIE_API_SRC = \"https://kinopoiskapiunofficial.tech/api/v2.2/films?order=RATING&type=ALL&ratingFrom=0&ratingTo=10&yearFrom=1000&yearTo=3000&page=2\"\r\n\r\nasync function getMovies(url) {\r\n    try {\r\n        const resp = await fetch(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-API-KEY\": API_KEY,\r\n            }\r\n        });\r\n\r\n        const resp_data = await resp.json();\r\n        return resp_data;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching and parsing data:\", error);\r\n    };\r\n};\r\n\r\nlet APImovies = await getMovies(MOVIE_API_SRC).then(result => result);\r\n\r\nconst APImoviesList = APImovies.items;\r\n\r\nconst initialState = {\r\n    movies: APImoviesList.map(movie => (\r\n        {\r\n            movieImg: movie.posterUrl,\r\n            movieInfo: {\r\n                movieTitle: movie.nameRu,\r\n                movieCategory: movie.genres[0].genre,\r\n                movieRating: movie.ratingImdb,\r\n            }\r\n        }\r\n    )).filter(item => item.movieInfo.movieCategory !== \"музыка\" && item.movieInfo.movieCategory !== \"фэнтези\"),\r\n};\r\n\r\nconst CinemaSlicer = createSlice({\r\n    name: \"CinemaSlicer\",\r\n    initialState,\r\n    reducers: {\r\n        nulling(state, action) {\r\n            state.movies = state.movies // Spare function\r\n        }\r\n    }\r\n});\r\n\r\nexport default CinemaSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,MAAMC,aAAa,GAAG,oIAAoI;AAE1J,eAAeC,SAASA,CAACC,GAAG,EAAE;EAC1B,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAC1BG,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,WAAW,EAAEN;MACjB;IACJ,CAAC,CAAC;IAEF,MAAMO,SAAS,GAAG,MAAMH,IAAI,CAACI,IAAI,CAAC,CAAC;IACnC,OAAOD,SAAS;EAEpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC5D;EAAC;AACL;AAAC;AAED,IAAIE,SAAS,GAAG,MAAMT,SAAS,CAACD,aAAa,CAAC,CAACW,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAC;AAErE,MAAMC,aAAa,GAAGH,SAAS,CAACI,KAAK;AAErC,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEH,aAAa,CAACI,GAAG,CAACC,KAAK,KAC3B;IACIC,QAAQ,EAAED,KAAK,CAACE,SAAS;IACzBC,SAAS,EAAE;MACPC,UAAU,EAAEJ,KAAK,CAACK,MAAM;MACxBC,aAAa,EAAEN,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;MACpCC,WAAW,EAAET,KAAK,CAACU;IACvB;EACJ,CAAC,CACJ,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACT,SAAS,CAACG,aAAa,KAAK,QAAQ,IAAIM,IAAI,CAACT,SAAS,CAACG,aAAa,KAAK,SAAS;AAC7G,CAAC;AAED,MAAMO,YAAY,GAAGjC,WAAW,CAAC;EAC7BkC,IAAI,EAAE,cAAc;EACpBjB,YAAY;EACZkB,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACnB,MAAM,GAAGmB,KAAK,CAACnB,MAAM,EAAC;IAChC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAee,YAAY,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}