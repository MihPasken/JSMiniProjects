{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikto\\\\Desktop\\\\MyWorks\\\\JS\\\\JSMiniProjects\\\\cinemax\\\\src\\\\Components\\\\CinemaContent\\\\Header\\\\HeaderContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSearchChar } from \"../../../Redux/HeaderSlicer\";\n\n// Container component for the Header\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderContainer = () => {\n  _s();\n  // Initialize the useDispatch hook\n  const dispatch = useDispatch();\n  // Get the current search text from the Redux store\n  let searchText = useSelector(state => state.Header.searchText);\n\n  // Handler for changing the search text\n  const onChangeSearch = text => {\n    // Dispatch the updateSearchChar action with the new text\n    dispatch(updateSearchChar(text));\n  };\n\n  // Render the Header component with props\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onChangeSearch: onChangeSearch,\n    searchText: searchText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n// Export the HeaderContainer component as default\n_s(HeaderContainer, \"jeiVZiSXqmxbxHzQp3kWl/v8e8g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = HeaderContainer;\nexport default HeaderContainer;\nvar _c;\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"names":["React","Header","useDispatch","useSelector","updateSearchChar","jsxDEV","_jsxDEV","HeaderContainer","_s","dispatch","searchText","state","onChangeSearch","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vikto/Desktop/MyWorks/JS/JSMiniProjects/cinemax/src/Components/CinemaContent/Header/HeaderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateSearchChar } from \"../../../Redux/HeaderSlicer\";\r\n\r\n// Container component for the Header\r\nconst HeaderContainer = () => {\r\n    // Initialize the useDispatch hook\r\n    const dispatch = useDispatch();\r\n    // Get the current search text from the Redux store\r\n    let searchText = useSelector(state => state.Header.searchText);\r\n\r\n    // Handler for changing the search text\r\n    const onChangeSearch = (text) => {\r\n        // Dispatch the updateSearchChar action with the new text\r\n        dispatch(updateSearchChar(text));\r\n    };\r\n\r\n    // Render the Header component with props\r\n    return <Header onChangeSearch={onChangeSearch} searchText={searchText} />;\r\n}\r\n\r\n// Export the HeaderContainer component as default\r\nexport default HeaderContainer;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,6BAA6B;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B;EACA,IAAIQ,UAAU,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACV,MAAM,CAACS,UAAU,CAAC;;EAE9D;EACA,MAAME,cAAc,GAAIC,IAAI,IAAK;IAC7B;IACAJ,QAAQ,CAACL,gBAAgB,CAACS,IAAI,CAAC,CAAC;EACpC,CAAC;;EAED;EACA,oBAAOP,OAAA,CAACL,MAAM;IAACW,cAAc,EAAEA,cAAe;IAACF,UAAU,EAAEA;EAAW;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;;AAED;AAAAT,EAAA,CAhBMD,eAAe;EAAA,QAEAL,WAAW,EAEXC,WAAW;AAAA;AAAAe,EAAA,GAJ1BX,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}